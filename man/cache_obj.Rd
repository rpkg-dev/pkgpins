% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkgpins-GEN.R
\name{cache_obj}
\alias{cache_obj}
\title{Cache an object to a package's user-cache pins board}
\usage{
cache_obj(x, id, pkg)
}
\arguments{
\item{x}{An object, local file or remote URL to be cached.}

\item{id}{The pin name uniquely identifying \code{x} in the \code{pkg}'s user-cache pins board. A character scalar. Necessary to retrieve \code{x} again using
\code{\link[=get_obj]{get_obj()}}. An already existing pin named \code{id} will be silently overwritten.}

\item{pkg}{Package name. A character scalar.}
}
\description{
This function stores an object in a package's user-cache pins board.
}
\details{
The exact date and time (UTC) of the pinning is stored as the additional metadata \code{cached} which is of type \link[base:integer]{integer}. You can restore the
actual datetime using \code{\link[lubridate:as_date]{lubridate::as_datetime(cached)}} (note that \code{\link[=ls_cache]{ls_cache()}} does this automatically).

See \code{\link[=call_to_name]{call_to_name()}} for a convenient way to create an \code{id} that uniquely identifies a function call.
}
\examples{
\donttest{
library(magrittr)

jsonlite::fromJSON(txt = "https://sysreqs.r-hub.io/pkg/git2r",
                   simplifyVector = FALSE) \%>\%
  purrr::flatten() \%>\%
  pkgpins::cache_obj(id = "git2r-syreqs",
                     pkg = "not.a.real.pkg")}
}
